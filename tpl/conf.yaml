# the folder of the app's source code is looked up
# in the 'folders_on_host' entry below
active_app: daiquiri

enable_containers:
    daiquiri: True
    pgapp: True
    pgdata: True
    wpdb: True
    rabbitmq: False

enable_database_volumes:
    pgapp: False
    pgdata: True
    wpdb: True

folders_on_host:
    # daiquiri source repo
    dq_source: <HOME>/rolling/aip/github/daiquiri
    # possible app repos
    applause: <HOME>/rolling/aip/gitlab/applause-app
    daiquiri: <HOME>/rolling/aip/github/daiquiri-app
    rave: <HOME>/rolling/aip/gitlab/rave-app
    xmmssc: <HOME>/rolling/aip/gitlab/xmmssc-app
    # others
    shed: <HOME>/tools/shed
    testdata: <HOME>/rolling/aip/self/app-testdata-importer

docker_volume_mountpoints:
    dq_source: /home/dq/source
    dq_app: /home/dq/app
    shed: /vol/tools/shed
    testdata: /vol/testdata

# db ports do not have to be exposed, but it's nice for test and development
exposed_ports:
    daiquiri:
        - 9280:9280
    pgapp:
        # - 9281:5432
    pgdata:
        # - 9282:5432
    wpdb:
        # - 9283:3306

# the containers' environment variables
# service names are also derived from here
env:
    daiquiri:
        - URL_BASE=http://localhost:9280
        - SERVER_HTTPS=False
        # default user settings below, it is highly recommended to change these
        - DAIQUIRI_ADMIN_USER=dqadmin
        - DAIQUIRI_ADMIN_PASSWORD=dqadmin
        - DAIQUIRI_ADMIN_EMAIL=dqadmin@dqdev.de
        - WORDPRESS_ADMIN_USER=wpadmin
        - WORDPRESS_ADMIN_PASSWORD=wpadmin
        - WORDPRESS_ADMIN_EMAIL=wpadmin@dqdev.de
        # wordpress related
        - WORDPRESS_TITLE=dqdev
        - WORDPRESS_URL=/cms/
        - WORDPRESS_CLI=/usr/bin/wp
        - WORDPRESS_DB_HOST=<CONTAINER_WPDB>:3306
        - WORDPRESS_DB_USER=wordpress
        - WORDPRESS_DB_NAME=wordpress
        - WORDPRESS_DB_PASSWORD=wordpress
        - WORDPRESS_TABLE_PREFIX=wp_
        - DATABASE_APP=postgresql://daiquiri_app:daiquiri_app@<CONTAINER_PGAPP>/daiquiri_app
        - DATABASE_DATA=postgresql://daiquiri_data:daiquiri_data@<CONTAINER_PGDATA>/daiquiri_data
        - ALLOWED_HOSTS=*
        - SECRET_KEY=verysecretkey
        - DEBUG=True
        - ACCOUNT_EMAIL_VERIFICATION=optional
        - ARCHIVE_BASE_PATH=/tmp/files
        - ARCHIVE_DOWNLOAD_DIR=/tmp/download
        - FILES_BASE_PATH=/tmp/files
        - QUERY_DOWNLOAD_DIR=/tmp/download
        - QUERY_UPLOAD_DIR=/tmp/upload
        - ASYNC=False
        - CELERY_BROKER_URL=amqp://gaia:password@<CONTAINER_RABBITMQ>:5672/gaia

    pgapp:
        - POSTGRES_HOST=pgapp
        - POSTGRES_PORT=5432
        - POSTGRES_DB=daiquiri_app
        - POSTGRES_USER=daiquiri_app
        - POSTGRES_PASSWORD=daiquiri_app

    pgdata:
        - POSTGRES_HOST=pgdata
        - POSTGRES_PORT=5432
        - POSTGRES_DB=daiquiri_data
        - POSTGRES_USER=daiquiri_data
        - POSTGRES_PASSWORD=daiquiri_data

    wpdb:
        - MYSQL_ROOT_PASSWORD=somewordpress
        - MYSQL_DATABASE=wordpress
        - MYSQL_USER=wordpress
        - MYSQL_PASSWORD=wordpress
        - MYSQL_PORT=3306
        - MYSQL_HOSTNAME=<CONTAINER_WPDB>

    rabbitmq:
        - RABBITMQ_USER=gaia
        - RABBITMQ_PASSWORD=password
        - RABBITMQ_VHOST=gaia
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=admin
        - RABBITMQ_LOGS=-

# define additional packages that are installed during the docker container
# build process from the base image's repositories, uncomment below
# additional_packages:
#     daiquiri:
#         - wget
#
#     pgapp:
#         - procps
#
#     pgdata:
#         - procps
#
#     wpdb:
#         - procps
#
#     rabbitmq:
#         - procps
